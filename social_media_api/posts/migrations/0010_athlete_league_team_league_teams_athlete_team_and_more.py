# Generated by Django 5.2.7 on 2025-10-11 20:03

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('posts', '0009_add_bookmark_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='Athlete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text="Athlete's first name", max_length=50)),
                ('last_name', models.CharField(help_text="Athlete's last name", max_length=50)),
                ('slug', models.SlugField(help_text='URL-friendly identifier', unique=True)),
                ('position', models.CharField(help_text='Playing position/role', max_length=50)),
                ('sport', models.CharField(help_text='Sport type', max_length=50)),
                ('country', models.CharField(help_text='Country of origin', max_length=100)),
                ('birth_date', models.DateField(blank=True, help_text='Date of birth', null=True)),
                ('height_cm', models.PositiveIntegerField(blank=True, help_text='Height in centimeters', null=True)),
                ('weight_kg', models.PositiveIntegerField(blank=True, help_text='Weight in kilograms', null=True)),
                ('photo_url', models.URLField(blank=True, help_text='Profile photo URL')),
                ('career_stats', models.JSONField(default=dict, help_text='Career statistics')),
                ('achievements', models.JSONField(default=list, help_text='Major achievements/titles')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of the league', max_length=100)),
                ('slug', models.SlugField(help_text='URL-friendly identifier', unique=True)),
                ('description', models.TextField(help_text='Detailed description of the league')),
                ('sport', models.CharField(help_text='Sport type (Basketball, Soccer, etc.)', max_length=50)),
                ('country', models.CharField(help_text='Country where league is based', max_length=100)),
                ('logo_url', models.URLField(blank=True, help_text='League logo URL')),
                ('website_url', models.URLField(blank=True, help_text='Official league website')),
                ('season_start', models.DateField(blank=True, help_text='Start date of current season', null=True)),
                ('season_end', models.DateField(blank=True, help_text='End date of current season', null=True)),
                ('standings', models.JSONField(default=dict, help_text='Current league standings data')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full team name', max_length=100)),
                ('slug', models.SlugField(help_text='URL-friendly identifier', unique=True)),
                ('abbreviation', models.CharField(blank=True, help_text='Team abbreviation (e.g., LAL, MCI)', max_length=10)),
                ('sport', models.CharField(help_text='Sport type', max_length=50)),
                ('city', models.CharField(help_text='City where team is based', max_length=100)),
                ('country', models.CharField(help_text='Country where team is based', max_length=100)),
                ('stadium', models.CharField(blank=True, help_text='Home stadium name', max_length=100)),
                ('logo_url', models.URLField(blank=True, help_text='Team logo URL')),
                ('website_url', models.URLField(blank=True, help_text='Official team website')),
                ('founded_year', models.PositiveIntegerField(blank=True, help_text='Year the team was founded', null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2025)])),
                ('schedule', models.JSONField(default=list, help_text='Upcoming games/matches schedule')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('league', models.ForeignKey(help_text='League this team belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='league_teams', to='posts.league')),
                ('roster', models.ManyToManyField(blank=True, help_text='Current team roster', related_name='teams', to='posts.athlete')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='league',
            name='teams',
            field=models.ManyToManyField(blank=True, help_text='Teams in this league', related_name='leagues', to='posts.team'),
        ),
        migrations.AddField(
            model_name='athlete',
            name='team',
            field=models.ForeignKey(blank=True, help_text='Current team (null for free agents)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_roster', to='posts.team'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['sport', 'country'], name='posts_team_sport_071dfa_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['league', 'name'], name='posts_team_league__62cee0_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['slug'], name='posts_team_slug_b42a07_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('name', 'league')},
        ),
        migrations.AddIndex(
            model_name='league',
            index=models.Index(fields=['sport', 'country'], name='posts_leagu_sport_be0ab0_idx'),
        ),
        migrations.AddIndex(
            model_name='league',
            index=models.Index(fields=['slug'], name='posts_leagu_slug_4e45bd_idx'),
        ),
        migrations.AddIndex(
            model_name='athlete',
            index=models.Index(fields=['sport', 'country'], name='posts_athle_sport_cf74e1_idx'),
        ),
        migrations.AddIndex(
            model_name='athlete',
            index=models.Index(fields=['team', 'position'], name='posts_athle_team_id_7ccbb1_idx'),
        ),
        migrations.AddIndex(
            model_name='athlete',
            index=models.Index(fields=['slug'], name='posts_athle_slug_543904_idx'),
        ),
    ]
